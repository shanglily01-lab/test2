# 缓存服务数据库方法修复指南

## 问题
cache_update_service.py 使用了 `get_connection()` 方法，但 DatabaseService 只提供 `get_session()` 方法（SQLAlchemy）

## 需要修复的方法（剩余5个）

### 1. _upsert_news_sentiment (第936行)
### 2. _upsert_funding_rate_stats (第969行)
### 3. _upsert_recommendation (第1000行)
### 4. _get_cached_technical_data (第636行) - 读取方法
### 5. _get_cached_news_data (第676行) - 读取方法
### 6. _get_cached_funding_data (第702行) - 读取方法
### 7. _get_cached_hyperliquid_data (第728行) - 读取方法
### 8. _get_cached_price_stats (第754行) - 读取方法

## 修复模式

### 写入方法：
将:
```python
conn = self.db_service.get_connection()
cursor = conn.cursor()
sql = """ INSERT ... %(param)s ... """
cursor.execute(sql, kwargs)
conn.commit()
cursor.close()
```

改为:
```python
session = None
try:
    session = self.db_service.get_session()
    sql = text(""" INSERT ... :param ... """)
    session.execute(sql, kwargs)
    session.commit()
except Exception as e:
    if session:
        session.rollback()
    logger.error(...)
finally:
    if session:
        session.close()
```

### 读取方法：
将:
```python
conn = self.db_service.get_connection()
cursor = conn.cursor(dictionary=True)
cursor.execute("SELECT...", (param,))
result = cursor.fetchone()
cursor.close()
conn.close()
```

改为:
```python
session = None
try:
    session = self.db_service.get_session()
    sql = text("SELECT...")
    result = session.execute(sql, {"param": value}).fetchone()
    if result:
        return dict(result)
finally:
    if session:
        session.close()
```

## 自动化修复

由于修改较多，建议使用 sed 批量替换或手动替换：

1. 在所有SQL语句外添加 text() 包装
2. 将 %(name)s 改为 :name
3. 将 get_connection() 改为 get_session()
4. 添加 session 的 try/finally 块
5. 添加 rollback 异常处理
